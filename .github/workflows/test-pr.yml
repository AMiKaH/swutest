name: CodeClimate-Checks
on:
  push:
    # branches:
    #   - 'main'
  # pull_request:
  #   branches:
  #     - 'main'
  workflow_dispatch:

jobs:
  get-main-branch-sha:
    runs-on: ubuntu-latest
    outputs:
      run_rest_of_jobs: ${{ steps.set_output.outputs.run_jobs }}

    steps:
      - name: checkout-main
        uses: actions/checkout@v2
        id: tests
        with:
          ref: 'main'
      
      - name: new-sha 
        id: get-sha
        run: |
          echo ::set-output name=sha::$( curl -u "u:${{github.token}}" https://api.github.com/repos/AMiKaH/swutest/git/ref/heads/main | jq .object.sha | tr -d '"' )

      - name: Test-sha 
        env: 
          DEFAULT_SHA: ${{ steps.get-sha.outputs.sha }}
        run: |
          echo "steps: ${{env.DEFAULT_SHA}}"
          echo "Default Branch: ${{github.event.repository.default_branch}}"
          echo "Default Branch SHA: ${{github.event.repository.default_branch.github_sha}}"
          echo "Base Branch: ${GITHUB_REF}"
          echo "COMMIT SHA: ${GITHUB_SHA}"

      - name: set-output
        id: set_output
        run: |
          if ${env.DEFAULT_SHA == $GITHUB_SHA}; then
            echo "::set-output name=run_jobs::false"
          else            
            echo "::set-output name=run_jobs::false"
          fi

  collect-frontend-coverage:
    needs: [get-main-branch-sha]
    if: needs.get-main-branch-sha.outputs.run_rest_of_jobs == 'true'
    defaults:
      run:
        working-directory: ./frontend/react-test

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install   
        
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: Run test and generate report
        run: npm test -- --coverage
                  
      - name: Collect frontend coverage
        run: cc-test-reporter format-coverage -t lcov -o coverage/frontend.json 

      - name: Create frontend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: ./frontend/react-test/coverage/frontend.json
          retention-days: 1


  collect-backend-coverage:
    needs: [get-main-branch-sha]
    if: needs.get-main-branch-sha.outputs.run_rest_of_jobs == 'true'
    defaults:
      run:
        working-directory: ./backend/pytest

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: ['3.10']

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Install Coverage
        run: |
          pip install coverage
        
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: Run unit tests
        run: coverage run -m unittest test_pytest.py
          
      - name: Generate xml coverage report
        run: coverage xml
        
      - name: Collect Backend Report
        run: |
          dir
          cc-test-reporter format-coverage -t coverage.py -o coverage/backend.json

      - name: Create backend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: ./backend/pytest/coverage/backend.json
          retention-days: 1
        

  codeclimate-sum-coverage:
    needs: [ collect-frontend-coverage, collect-backend-coverage ]

    runs-on: ubuntu-latest

    steps:
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}
          cc_test_reporter_version: latest  # optional

      - name: Download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend

      - name: Download backend artifact
        uses: actions/download-artifact@v2
        with:
          name: backend

      - name: Sum files
        run: |          
          cc-test-reporter sum-coverage -p 2 frontend.json backend.json
          cc-test-reporter upload-coverage -i ./coverage/codeclimate.json
      
      - name: Create summed report
        uses: actions/upload-artifact@v2
        with:
          name: summed
          path: ./coverage/codeclimate.json
          retention-days: 1